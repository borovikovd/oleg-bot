[project]
name = "oleg-bot"
version = "0.1.0"
description = "Witty, stateless GPT-4o-powered Telegram bot"
authors = [
    {name = "Denis", email = "denis@example.com"}
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-telegram-bot>=20.7",
    "openai>=1.3.0",
    "langdetect>=1.0.9",
    "prometheus-client>=0.19.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
    "python-multipart>=0.0.6",
    "pydantic-settings>=2.10.1",
    "slowapi>=0.1.9",
    "tenacity>=9.1.2",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "respx>=0.20.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/oleg_bot"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.lint.isort]
known-first-party = ["oleg_bot"]

[tool.mypy]
python_version = "3.13"
strict = true
warn_unused_configs = true
show_error_codes = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/oleg_bot",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "respx>=0.22.0",
    "ruff>=0.12.5",
]
